Notes:
 * no tests for type 'long' because 'long' is either 'int' or 'long long' depends on OS
   and is completely covered by other tests ('int' and 'long long').
 * type legend: 'c' for char, 's' for short, 'i' for int, 'q' for long long,
   capital chars for unsigned prefixes;  'f' for float, 'd' for double.
 * output inside {{ .. }} is native code output

---------------------------------------------------------------
parameterless function returning numeric type by value (neutral values, type limits)
(such calls are optimized for execution, no stack and heap sizes check for params)
type cN_()
{
   type y = X;
   printf('{{ () => format }}', y); fflush(stdout);
   return y;
}
   (C0_) --> {{ () => 0 }} = 0
   (C1_) --> {{ () => 1 }} = 1
   (C255_) --> {{ () => 255 }} = 255
   (S0_) --> {{ () => 0 }} = 0
   (S1_) --> {{ () => 1 }} = 1
   (S65535_) --> {{ () => 65535 }} = 65535
   (I0_) --> {{ () => 0 }} = 0
   (I1_) --> {{ () => 1 }} = 1
   (I4294967295_) --> {{ () => 4294967295 }} = 4294967295
   (Q0_) --> {{ () => 0 }} = 0
   (Q1_) --> {{ () => 1 }} = 1
   (Q18446744073709551615_) --> {{ () => 18446744073709551615 }} = 18446744073709551615
   (cm128_) --> {{ () => -128 }} = -128
   (cm1_) --> {{ () => -1 }} = -1
   (c0_) --> {{ () => 0 }} = 0
   (c1_) --> {{ () => 1 }} = 1
   (c127_) --> {{ () => 127 }} = 127
   (sm32768_) --> {{ () => -32768 }} = -32768
   (sm1_) --> {{ () => -1 }} = -1
   (s0_) --> {{ () => 0 }} = 0
   (s1_) --> {{ () => 1 }} = 1
   (s32767_) --> {{ () => 32767 }} = 32767
   (im2147483648_) --> {{ () => -2147483648 }} = -2147483648
   (im1_) --> {{ () => -1 }} = -1
   (i0_) --> {{ () => 0 }} = 0
   (i1_) --> {{ () => 1 }} = 1
   (i2147483647_) --> {{ () => 2147483647 }} = 2147483647
   (qm9223372036854775807_) --> {{ () => -9223372036854775807 }} = -9223372036854775807
   (qm1_) --> {{ () => -1 }} = -1
   (q0_) --> {{ () => 0 }} = 0
   (q1_) --> {{ () => 1 }} = 1
   (q9223372036854775807_) --> {{ () => 9223372036854775807 }} = 9223372036854775807
   (fm10000000000_) --> {{ () => -10000000000.000000 }} = -1.0e10
   (fm1_) --> {{ () => -1.000000 }} = -1.0
   (f0_) --> {{ () => 0.000000 }} = 0.0
   (f1_) --> {{ () => 1.000000 }} = 1.0
   (f10000000000_) --> {{ () => 10000000000.000000 }} = 1.0e10
   (dm1000000000000000000000000000000000000000000000000_) --> {{ () => -1000000000000000043845843045076197354634047651840.000000 }} = -10.0e47
   (dm1_) --> {{ () => -1.000000 }} = -1.0
   (d0_) --> {{ () => 0.000000 }} = 0.0
   (d1_) --> {{ () => 1.000000 }} = 1.0
   (d1000000000000000000000000000000000000000000000000_) --> {{ () => 1000000000000000043845843045076197354634047651840.000000 }} = 10.0e47
